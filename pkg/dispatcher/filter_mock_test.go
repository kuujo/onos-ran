// Code generated by protoc-gen-gogo. DO NOT EDIT.
// Source: pkg/dispatcher/filter.go

// Package dispatcher is a generated GoMock package.
package dispatcher

import (
	"github.com/golang/mock/gomock"
	"github.com/onosproject/onos-ric/pkg/store/mastership"
	"reflect"
)

// MockFilter is a mock of Filter interface
type MockFilter struct {
	ctrl     *gomock.Controller
	recorder *MockFilterMockRecorder
}

// MockFilterMockRecorder is the mock recorder for MockFilter
type MockFilterMockRecorder struct {
	mock *MockFilter
}

// NewMockFilter creates a new mock instance
func NewMockFilter(ctrl *gomock.Controller) *MockFilter {
	mock := &MockFilter{ctrl: ctrl}
	mock.recorder = &MockFilterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFilter) EXPECT() *MockFilterMockRecorder {
	return m.recorder
}

// Accept mocks base method
func (m *MockFilter) Accept(request Request) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accept", request)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Accept indicates an expected call of Accept
func (mr *MockFilterMockRecorder) Accept(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accept", reflect.TypeOf((*MockFilter)(nil).Accept), id)
}

// MockMastershipKeyResolver is a mock of MastershipKeyResolver interface
type MockMastershipKeyResolver struct {
	ctrl     *gomock.Controller
	recorder *MockMastershipKeyResolverMockRecorder
}

// MockMastershipKeyResolverMockRecorder is the mock recorder for MockMastershipKeyResolver
type MockMastershipKeyResolverMockRecorder struct {
	mock *MockMastershipKeyResolver
}

// NewMockMastershipKeyResolver creates a new mock instance
func NewMockMastershipKeyResolver(ctrl *gomock.Controller) *MockMastershipKeyResolver {
	mock := &MockMastershipKeyResolver{ctrl: ctrl}
	mock.recorder = &MockMastershipKeyResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMastershipKeyResolver) EXPECT() *MockMastershipKeyResolverMockRecorder {
	return m.recorder
}

// Resolve mocks base method
func (m *MockMastershipKeyResolver) Resolve(request Request) (mastership.Key, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve", request)
	ret0, _ := ret[0].(mastership.Key)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve
func (mr *MockMastershipKeyResolverMockRecorder) Resolve(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockMastershipKeyResolver)(nil).Resolve), id)
}
